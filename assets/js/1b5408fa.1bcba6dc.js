"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[363],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},s="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=c(n),d=o,h=s["".concat(p,".").concat(d)]||s[d]||m[d]||a;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},835:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:1,title:"Routing",description:"Explanation of how the framework handles routing and URL mapping."},i="Routing",l={unversionedId:"core-features/routing",id:"core-features/routing",title:"Routing",description:"Explanation of how the framework handles routing and URL mapping.",source:"@site/docs/core-features/routing.md",sourceDirName:"core-features",slug:"/core-features/routing",permalink:"/docs/core-features/routing",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Routing",description:"Explanation of how the framework handles routing and URL mapping."},sidebar:"sidebar",previous:{title:"Core Features",permalink:"/docs/core-features/"},next:{title:"ORM",permalink:"/docs/core-features/orm"}},p={},c=[{value:"Routing Convention",id:"routing-convention",level:3},{value:"Homepage",id:"homepage",level:3},{value:"Example",id:"example",level:3}],u={toc:c},s="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(s,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"routing"},"Routing"),(0,o.kt)("p",null,"The router is responsible for handling incoming requests and mapping them to the appropriate controller action. Our router is automatic, meaning that it requires minimal configuration to get started."),(0,o.kt)("h3",{id:"routing-convention"},"Routing Convention"),(0,o.kt)("p",null,"Our router follows a simple convention for mapping URLs to controller actions. The convention is as follows:"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"/controller-name/action-name[/id]")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("strong",{parentName:"li"},"first")," part of the URL represents the name of the ",(0,o.kt)("strong",{parentName:"li"},"controller class")," that will handle the request."),(0,o.kt)("li",{parentName:"ul"},"The ",(0,o.kt)("strong",{parentName:"li"},"second")," part represents the name of the ",(0,o.kt)("strong",{parentName:"li"},"action method")," within the controller that will be executed."),(0,o.kt)("li",{parentName:"ul"},"An ",(0,o.kt)("strong",{parentName:"li"},"optional third")," part can be added to the URL to pass ",(0,o.kt)("strong",{parentName:"li"},"dynamic parameters")," to the action method. This part can be named anything you want, and it will be passed to the action method as a parameter.")),(0,o.kt)("h3",{id:"homepage"},"Homepage"),(0,o.kt)("p",null,"By default, the homepage of the application maps to the ",(0,o.kt)("inlineCode",{parentName:"p"},"AppController")," and the ",(0,o.kt)("inlineCode",{parentName:"p"},"indexAction"),". Therefore, if the URL does not include any controller or action, the router will automatically route the request to the AppController and the indexAction."),(0,o.kt)("h3",{id:"example"},"Example"),(0,o.kt)("p",null,"Here's an example of how the router maps a URL to a controller action:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"URL: /blog/post/123\n\nController Class: BlogController\nAction Method: postAction($id)\n\nNote: The value '123' will be passed as the $id parameter to the postAction method.\n")),(0,o.kt)("p",null,"That's it! With this convention in place, our router can automatically handle incoming requests and route them to the appropriate controller and action, without requiring any additional configuration."))}m.isMDXComponent=!0}}]);